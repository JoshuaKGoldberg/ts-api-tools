name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: Release
  cancel-in-progress: false

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      did_release: ${{ steps.should_release.outputs.should_release }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/prepare
      - run: pnpm build
      - env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm config set //registry.npmjs.org/:_authToken $NPM_TOKEN

      - id: should_release
        run: echo "should_release=$(pnpm run should-semantic-release &> /dev/null && echo '1' || echo '0')" >> "$GITHUB_OUTPUT"

      - if: steps.should_release.outputs.should_release != '0'
        uses: ./.github/actions/unprotect-main
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      - if: steps.should_release.outputs.should_release != '0'
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: pnpm release-it --verbose
      - if: always() && steps.should_release.outputs.should_release != '0'
        uses: ./.github/actions/protect-main
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

  release_docs:
    needs: release
    if: needs.release.outputs.did_release != '0'
    uses: ./.github/workflows/release-docs.yml
